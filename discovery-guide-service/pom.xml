<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <artifactId>discovery-guide-service</artifactId>
    <name>Nepxion Discovery Guide Service</name>
    <packaging>jar</packaging>
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.nepxion</groupId>
        <artifactId>discovery-guide</artifactId>
        <version>1.0.0</version>
    </parent>

    <dependencies>
        <!-- 框架支持服务基于注册中心的核心实现，必须引入 -->
        <dependency>
            <groupId>com.nepxion</groupId>
            <artifactId>discovery-plugin-starter-nacos</artifactId>
            <!-- <artifactId>discovery-plugin-starter-consul</artifactId> -->
            <!-- <artifactId>discovery-plugin-starter-eureka</artifactId> -->
            <version>${discovery.version}</version>
        </dependency>

        <!-- 框架支持服务实现配置中心的灰度配置和策略订阅，可以不引入。强烈建议引入 -->
        <dependency>
            <groupId>com.nepxion</groupId>
            <artifactId>discovery-plugin-config-center-starter-nacos</artifactId>
            <!-- <artifactId>discovery-plugin-config-center-starter-apollo</artifactId> -->
            <version>${discovery.version}</version>
        </dependency>

        <!-- 框架支持服务的策略扩展包，可以不引入。强烈建议引入 -->
        <dependency>
            <groupId>com.nepxion</groupId>
            <artifactId>discovery-plugin-strategy-starter-service</artifactId>
            <version>${discovery.version}</version>
        </dependency>

        <!-- 框架支持服务的Sentinel灰度增强功能，可以不引入。必须和下面的包配套引入 -->
        <dependency>
            <groupId>com.nepxion</groupId>
            <artifactId>discovery-plugin-strategy-starter-service-sentinel</artifactId>
            <version>${discovery.version}</version>
        </dependency>

        <dependency>
            <groupId>com.nepxion</groupId>
            <artifactId>discovery-plugin-strategy-sentinel-starter-nacos</artifactId>
            <!-- <artifactId>discovery-plugin-strategy-sentinel-starter-apollo</artifactId> -->
            <version>${discovery.version}</version>
        </dependency>

        <!-- 框架支持服务的Opentracing调用链，可以不引入。必须和下面的包配套引入 -->
        <dependency>
            <groupId>com.nepxion</groupId>
            <artifactId>discovery-plugin-strategy-starter-service-opentracing</artifactId>
            <version>${discovery.version}</version>
        </dependency>

        <dependency>
            <groupId>io.opentracing.contrib</groupId>
            <artifactId>opentracing-spring-jaeger-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>io.jaegertracing</groupId>
            <artifactId>jaeger-client</artifactId>
        </dependency>

        <!-- 框架支持服务的Opentracing异步调用链，可以不引入 -->
        <dependency>
            <groupId>io.opentracing.contrib</groupId>
            <artifactId>opentracing-concurrent</artifactId>
            <version>0.4.0</version>
        </dependency>

        <!-- 框架支持服务的Spring Boot Admin监控，可以不引入 -->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
        </dependency>

        <!-- 框架支持服务的Prometheus监控，可以不引入 -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <executable>true</executable>
                    <mainClass>${MainClass}</mainClass>
                    <!-- <mainClass>com.nepxion.discovery.guide.service.DiscoveryGuideServiceA1</mainClass> -->
                    <layout>JAR</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <attach>false</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <imageName>${ImageName}</imageName>
                    <baseImage>openjdk:8-jre-alpine</baseImage>
                    <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
                    <exposes>
                        <expose>${ExposePort}</expose>
                    </exposes>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.json</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.json</include>
                    <include>**/*.properties</include>
                    <include>**/META-INF/**</include>
                </includes>
            </resource>
        </resources>
    </build>
</project>